import{_ as r,V as d,W as k,Z as a,$ as t,X as n,Y as s,a0 as o,C as e}from"./framework-8fd515d9.js";const m={},v=n("h1",{id:"update-dns-records-dynamically",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#update-dns-records-dynamically","aria-hidden":"true"},"#"),s(" Update DNS records dynamically")],-1),b=o(`<h2 id="intro" tabindex="-1"><a class="header-anchor" href="#intro" aria-hidden="true">#</a> Intro</h2><p>For some areas, it is difficult to obtain a fixed public IP for normal home networks, but nowadays, IPv6 addresses are basically issued. The obtained IPv6 addresses are usually not static, so they need to be checked and updated periodically.</p><blockquote><p>Traditionally, when you connect to the internet, your Internet Service Provider (ISP) assigns you a unique IP address. This IP address is used to identify your device on the internet. However, in some cases, this IP address can change, especially if you are using a dynamic IP address. This can cause problems if you are running services on your device that require a static IP address, such as a web server.</p><p>DDNS solves this problem by providing a way to associate a domain name with your IP address. When your IP address changes, the DDNS service updates the DNS record for your domain name with the new IP address. This allows you to continue to use the same domain name to access your device, even if the IP address changes.</p><p>   —— ChatGPT</p></blockquote><h2 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation" aria-hidden="true">#</a> Implementation</h2><p>Taking Cloudflare as an example.</p><h3 id="using-cloudflare-api" tabindex="-1"><a class="header-anchor" href="#using-cloudflare-api" aria-hidden="true">#</a> Using Cloudflare API</h3><h4 id="get-api-key-and-zone-id" tabindex="-1"><a class="header-anchor" href="#get-api-key-and-zone-id" aria-hidden="true">#</a> Get API_Key and zone ID</h4><p>The Global API Key can be find in <code>API-Tokens</code> in the Personal Profile. The <code>zone ID</code> can be obtained by listening to the request through the browser developer tools. It can also be acquired automatically using the following script.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json
<span class="token keyword">import</span> urllib3

<span class="token keyword">def</span> <span class="token function">get_zone_id</span><span class="token punctuation">(</span>api_key<span class="token punctuation">,</span> email<span class="token punctuation">,</span> domain_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Set up the Cloudflare API endpoint and headers</span>
    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;https://api.cloudflare.com/client/v4/zones?name=</span><span class="token interpolation"><span class="token punctuation">{</span>domain_name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;X-Auth-Email&quot;</span><span class="token punctuation">:</span> email<span class="token punctuation">,</span>
        <span class="token string">&quot;X-Auth-Key&quot;</span><span class="token punctuation">:</span> api_key
    <span class="token punctuation">}</span>

    <span class="token comment"># Set up a connection pool with urllib3</span>
    http <span class="token operator">=</span> urllib3<span class="token punctuation">.</span>PoolManager<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Make the API request to get the zone ID</span>
    response <span class="token operator">=</span> http<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

    <span class="token comment"># Parse the response JSON and extract the zone ID</span>
    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    zone_id <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span>

    <span class="token keyword">return</span> zone_id

api_key <span class="token operator">=</span> <span class="token string">&quot;your_api_key&quot;</span>
email <span class="token operator">=</span> <span class="token string">&quot;your_email_address&quot;</span>
domain_name <span class="token operator">=</span> <span class="token string">&quot;example.com&quot;</span>

zone_id <span class="token operator">=</span> get_zone_id<span class="token punctuation">(</span>api_key<span class="token punctuation">,</span> email<span class="token punctuation">,</span> domain_name<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;The zone ID for </span><span class="token interpolation"><span class="token punctuation">{</span>domain_name<span class="token punctuation">}</span></span><span class="token string"> is: </span><span class="token interpolation"><span class="token punctuation">{</span>zone_id<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you can use the Cloudflare API to update a DNS record with your current IP address.</p><details class="hint-container details"><summary>Sample Python script</summary><p>This script first gets the <code>Zone ID</code> for the specified domain using the <code>get_zone_id</code> function we wrote earlier. It then uses the <code>urllib3</code> library to make API requests to Cloudflare, and the <code>ipify</code> service to get the current IP address. Finally, it checks if the specified DNS record already exists, and updates it with the new IP address if it does, or creates a new DNS record if it doesn&#39;t.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json
<span class="token keyword">import</span> urllib3

<span class="token comment"># Cloudflare API credentials</span>
API_KEY <span class="token operator">=</span> <span class="token string">&quot;your_api_key&quot;</span>
EMAIL <span class="token operator">=</span> <span class="token string">&quot;your_email_address&quot;</span>

<span class="token comment"># Domain and DNS record to update</span>
DOMAIN_NAME <span class="token operator">=</span> <span class="token string">&quot;example.com&quot;</span>
RECORD_NAME <span class="token operator">=</span> <span class="token string">&quot;subdomain.example.com&quot;</span>

<span class="token comment"># Get the Zone ID for the domain</span>
ZONE_ID <span class="token operator">=</span> get_zone_id<span class="token punctuation">(</span>API_KEY<span class="token punctuation">,</span> EMAIL<span class="token punctuation">,</span> DOMAIN_NAME<span class="token punctuation">)</span>

<span class="token comment"># Set up the Cloudflare API endpoint and headers</span>
url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;https://api.cloudflare.com/client/v4/zones/</span><span class="token interpolation"><span class="token punctuation">{</span>ZONE_ID<span class="token punctuation">}</span></span><span class="token string">/dns_records&quot;</span></span>
headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;X-Auth-Email&quot;</span><span class="token punctuation">:</span> EMAIL<span class="token punctuation">,</span>
    <span class="token string">&quot;X-Auth-Key&quot;</span><span class="token punctuation">:</span> API_KEY
<span class="token punctuation">}</span>

<span class="token comment"># Set up a connection pool with urllib3</span>
http <span class="token operator">=</span> urllib3<span class="token punctuation">.</span>PoolManager<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Get the current IP address from an external service</span>
response <span class="token operator">=</span> http<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://api.ipify.org&quot;</span><span class="token punctuation">)</span>
ip_address <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Set up the JSON payload for the DNS record update</span>
payload <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> RECORD_NAME<span class="token punctuation">,</span>
    <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> ip_address
<span class="token punctuation">}</span>

<span class="token comment"># Check if the record already exists, and update it if it does</span>
response <span class="token operator">=</span> http<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
<span class="token keyword">for</span> record <span class="token keyword">in</span> data<span class="token punctuation">[</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> record<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> RECORD_NAME<span class="token punctuation">:</span>
        record_id <span class="token operator">=</span> record<span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span>
        response <span class="token operator">=</span> http<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;PUT&quot;</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>record_id<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> body<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;DNS record updated for </span><span class="token interpolation"><span class="token punctuation">{</span>RECORD_NAME<span class="token punctuation">}</span></span><span class="token string"> with IP address </span><span class="token interpolation"><span class="token punctuation">{</span>ip_address<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token comment"># Create a new DNS record if it doesn&#39;t exist</span>
    response <span class="token operator">=</span> http<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> body<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;DNS record created for </span><span class="token interpolation"><span class="token punctuation">{</span>RECORD_NAME<span class="token punctuation">}</span></span><span class="token string"> with IP address </span><span class="token interpolation"><span class="token punctuation">{</span>ip_address<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>It is common for a website to have multiple sub-domains. In this case, the following scripts can be used to update the DNS records.</p>`,12),h=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(` json
`),n("span",{class:"token keyword"},"import"),s(` urllib3

`),n("span",{class:"token comment"},"# Cloudflare API credentials"),s(`
API_KEY `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"your_api_key"'),s(`
EMAIL `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"your_email_address"'),s(`

`),n("span",{class:"token comment"},"# Domain and DNS records to update"),s(`
DOMAIN_NAME `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"example.com"'),s(`
DNS_RECORDS `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"subdomain1.example.com"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"A"'),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"subdomain2.example.com"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"A"'),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"subdomain3.example.com"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"CNAME"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"www.example.com"'),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token comment"},"# Get the Zone ID for the domain"),s(`
ZONE_ID `),n("span",{class:"token operator"},"="),s(" get_zone_id"),n("span",{class:"token punctuation"},"("),s("API_KEY"),n("span",{class:"token punctuation"},","),s(" EMAIL"),n("span",{class:"token punctuation"},","),s(" DOMAIN_NAME"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# Set up the Cloudflare API endpoint and headers"),s(`
url `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"https://api.cloudflare.com/client/v4/zones/'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("ZONE_ID"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'/dns_records"')]),s(`
headers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token string"},'"Content-Type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"application/json"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},'"X-Auth-Email"'),n("span",{class:"token punctuation"},":"),s(" EMAIL"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},'"X-Auth-Key"'),n("span",{class:"token punctuation"},":"),s(` API_KEY
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"# Set up a connection pool with urllib3"),s(`
http `),n("span",{class:"token operator"},"="),s(" urllib3"),n("span",{class:"token punctuation"},"."),s("PoolManager"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# Get the current IP address from an external service"),s(`
response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GET"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"https://api.ipify.org"'),n("span",{class:"token punctuation"},")"),s(`
ip_address `),n("span",{class:"token operator"},"="),s(" response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},"."),s("decode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"utf-8"'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# Loop through the DNS records and update them"),s(`
`),n("span",{class:"token keyword"},"for"),s(" record "),n("span",{class:"token keyword"},"in"),s(" DNS_RECORDS"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# Set up the JSON payload for the DNS record update"),s(`
    payload `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},":"),s(" record"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},","),s(" ip_address"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"# Check if the record already exists, and update it if it does"),s(`
    response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GET"'),n("span",{class:"token punctuation"},","),s(" url"),n("span",{class:"token punctuation"},","),s(" headers"),n("span",{class:"token operator"},"="),s("headers"),n("span",{class:"token punctuation"},")"),s(`
    data `),n("span",{class:"token operator"},"="),s(" json"),n("span",{class:"token punctuation"},"."),s("loads"),n("span",{class:"token punctuation"},"("),s("response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"for"),s(" existing_record "),n("span",{class:"token keyword"},"in"),s(" data"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"result"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" existing_record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
            record_id `),n("span",{class:"token operator"},"="),s(" existing_record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"id"'),n("span",{class:"token punctuation"},"]"),s(`
            response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"PUT"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("url"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"/"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("record_id"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},","),s(" headers"),n("span",{class:"token operator"},"="),s("headers"),n("span",{class:"token punctuation"},","),s(" body"),n("span",{class:"token operator"},"="),s("json"),n("span",{class:"token punctuation"},"."),s("dumps"),n("span",{class:"token punctuation"},"("),s("payload"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"DNS record updated for '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'name'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," with IP address "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("ip_address"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"break"),s(`
    `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# Create a new DNS record if it doesn't exist"),s(`
        response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"POST"'),n("span",{class:"token punctuation"},","),s(" url"),n("span",{class:"token punctuation"},","),s(" headers"),n("span",{class:"token operator"},"="),s("headers"),n("span",{class:"token punctuation"},","),s(" body"),n("span",{class:"token operator"},"="),s("json"),n("span",{class:"token punctuation"},"."),s("dumps"),n("span",{class:"token punctuation"},"("),s("payload"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"DNS record created for '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'name'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," with IP address "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("ip_address"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(` json
`),n("span",{class:"token keyword"},"import"),s(` urllib3

`),n("span",{class:"token comment"},"# Cloudflare API credentials"),s(`
API_KEY `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"your_api_key"'),s(`
EMAIL `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"your_email_address"'),s(`

`),n("span",{class:"token comment"},"# Domain and DNS records to update"),s(`
DOMAIN_NAME `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"example.com"'),s(`
DNS_RECORDS `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"subdomain1.example.com"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"A"'),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"subdomain2.example.com"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"AAAA"'),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"subdomain3.example.com"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"CNAME"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"www.example.com"'),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token comment"},"# Get the Zone ID for the domain"),s(`
ZONE_ID `),n("span",{class:"token operator"},"="),s(" get_zone_id"),n("span",{class:"token punctuation"},"("),s("API_KEY"),n("span",{class:"token punctuation"},","),s(" EMAIL"),n("span",{class:"token punctuation"},","),s(" DOMAIN_NAME"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# Set up the Cloudflare API endpoint and headers"),s(`
url `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"https://api.cloudflare.com/client/v4/zones/'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("ZONE_ID"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'/dns_records"')]),s(`
headers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token string"},'"Content-Type"'),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"application/json"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},'"X-Auth-Email"'),n("span",{class:"token punctuation"},":"),s(" EMAIL"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},'"X-Auth-Key"'),n("span",{class:"token punctuation"},":"),s(` API_KEY
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"# Set up a connection pool with urllib3"),s(`
http `),n("span",{class:"token operator"},"="),s(" urllib3"),n("span",{class:"token punctuation"},"."),s("PoolManager"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# Get the current IPv4 and IPv6 addresses from an external service"),s(`
ipv4_response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GET"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"https://api.ipify.org"'),n("span",{class:"token punctuation"},")"),s(`
ipv4_address `),n("span",{class:"token operator"},"="),s(" ipv4_response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},"."),s("decode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"utf-8"'),n("span",{class:"token punctuation"},")"),s(`
ipv6_response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GET"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"https://api6.ipify.org"'),n("span",{class:"token punctuation"},")"),s(`
ipv6_address `),n("span",{class:"token operator"},"="),s(" ipv6_response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},"."),s("decode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"utf-8"'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# Loop through the DNS records and update them"),s(`
`),n("span",{class:"token keyword"},"for"),s(" record "),n("span",{class:"token keyword"},"in"),s(" DNS_RECORDS"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# Set up the JSON payload for the DNS record update"),s(`
    payload `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},":"),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},":"),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},":"),s(" ipv4_address "),n("span",{class:"token keyword"},"if"),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"A"'),s(),n("span",{class:"token keyword"},"else"),s(" ipv6_address "),n("span",{class:"token keyword"},"if"),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"type"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"AAAA"'),s(),n("span",{class:"token keyword"},"else"),s(" record"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"# Check if the record already exists, and update it if it does"),s(`
    response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GET"'),n("span",{class:"token punctuation"},","),s(" url"),n("span",{class:"token punctuation"},","),s(" headers"),n("span",{class:"token operator"},"="),s("headers"),n("span",{class:"token punctuation"},")"),s(`
    data `),n("span",{class:"token operator"},"="),s(" json"),n("span",{class:"token punctuation"},"."),s("loads"),n("span",{class:"token punctuation"},"("),s("response"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"for"),s(" existing_record "),n("span",{class:"token keyword"},"in"),s(" data"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"result"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" existing_record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
            record_id `),n("span",{class:"token operator"},"="),s(" existing_record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"id"'),n("span",{class:"token punctuation"},"]"),s(`
            response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"PUT"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("url"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"/"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("record_id"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},","),s(" headers"),n("span",{class:"token operator"},"="),s("headers"),n("span",{class:"token punctuation"},","),s(" body"),n("span",{class:"token operator"},"="),s("json"),n("span",{class:"token punctuation"},"."),s("dumps"),n("span",{class:"token punctuation"},"("),s("payload"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"DNS record updated for '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'name'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," with IP address "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("payload"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'content'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"break"),s(`
    `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# Create a new DNS record if it doesn't exist"),s(`
        response `),n("span",{class:"token operator"},"="),s(" http"),n("span",{class:"token punctuation"},"."),s("request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"POST"'),n("span",{class:"token punctuation"},","),s(" url"),n("span",{class:"token punctuation"},","),s(" headers"),n("span",{class:"token operator"},"="),s("headers"),n("span",{class:"token punctuation"},","),s(" body"),n("span",{class:"token operator"},"="),s("json"),n("span",{class:"token punctuation"},"."),s("dumps"),n("span",{class:"token punctuation"},"("),s("payload"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"DNS record created for '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("record"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'name'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," with IP address "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("payload"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'content'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=o(`<p>Note that this example assumes that all of the DNS records being updated belong to the same domain and have the same API credentials. If you need to update DNS records for multiple domains or with different API credentials, you should modify the script accordingly.</p><h3 id="using-package-cloudflare-ddns" tabindex="-1"><a class="header-anchor" href="#using-package-cloudflare-ddns" aria-hidden="true">#</a> Using package <code>cloudflare-ddns</code></h3><p>It is an IPv6-only example.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> cloudflare_ddns <span class="token keyword">import</span> CloudFlare
<span class="token keyword">import</span> urllib3

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;./currentip.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    ipv6_prev <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

ipv6 <span class="token operator">=</span> urllib3<span class="token punctuation">.</span>PoolManager<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>request<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> url<span class="token operator">=</span><span class="token string">&#39;http://ipv6.icanhazip.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>ipv6<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>ipv6<span class="token operator">!=</span>ipv6_prev<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;/home/nemo/ddns/currentip.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>ipv6<span class="token punctuation">)</span>

    cf <span class="token operator">=</span> CloudFlare<span class="token punctuation">(</span>
        email<span class="token operator">=</span><span class="token string">&#39;user@hostname.com&#39;</span><span class="token punctuation">,</span>
        api_key<span class="token operator">=</span><span class="token string">&#39;Global_API_Key&#39;</span><span class="token punctuation">,</span>
        domain<span class="token operator">=</span><span class="token string">&#39;example.com&#39;</span><span class="token punctuation">)</span>
    subdomains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;foo.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar.&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> site <span class="token keyword">in</span> subdomains<span class="token punctuation">:</span>
        cf<span class="token punctuation">.</span>create_or_update_record<span class="token punctuation">(</span><span class="token string">&#39;AAAA&#39;</span><span class="token punctuation">,</span> site<span class="token operator">+</span><span class="token string">&#39;example.com&#39;</span><span class="token punctuation">,</span> ipv6<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Update DNS records success.\\n&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Needn\\&#39;t to update DNS records.\\n&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scheduled-task" tabindex="-1"><a class="header-anchor" href="#scheduled-task" aria-hidden="true">#</a> Scheduled task</h2><p>You can use the <code>crontab</code> utility in Linux to schedule the script to run every 10 minutes. Here&#39;s how to set it up:</p><ol><li>Open the crontab editor by running the following command in your terminal: <code>crontab -e</code></li><li>If this is the first time you are using crontab, you may be prompted to choose an editor. Select your preferred editor, such as <code>nano</code> or <code>vim</code>.</li><li>In the editor, add a new line to the bottom of the file with the following format:<br><code>*/10 * * * * /path/to/python /path/to/ddns.py</code>.<br> Replace <code>/path/to/python</code> with the path to your Python executable (which you can find by running <code>which python</code> in your terminal), and /path/to/script.py with the path to your Python script.</li><li>Save and exit the editor.</li><li>The <code>*/10 * * * *</code> part of the line is the cron schedule expression, which specifies the schedule for the script to run. This expression means &quot;run the command every 10 minutes, at any hour, any day of the month, any month, and any day of the week.&quot;</li></ol><p>Once you save the crontab file, the script should run every 10 minutes as specified in the schedule expression. You can check the output of the script by looking at the standard output and error logs in the crontab log file, which is usually located at <code>/var/log/syslog</code>.</p>`,8);function f(_,w){const p=e("decl-en"),c=e("CodeTabs");return d(),k("div",null,[v,a(p,{aigc:"true"}),b,a(c,{id:"50",data:[{title:"IPv4"},{title:"IPv4/IPv6"}],"tab-id":"python"},{tab0:t(({title:i,value:l,isActive:u})=>[h]),tab1:t(({title:i,value:l,isActive:u})=>[g]),_:1}),y])}const I=r(m,[["render",f],["__file","ddns.html.vue"]]);export{I as default};
